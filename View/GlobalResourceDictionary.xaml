<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<Style TargetType="{x:Type TextBox}">
		<Style.Setters>
			<Setter Property="Background"
					Value="Transparent" />
			<Setter Property="Foreground"
					Value="White" />
			<Setter Property="Padding"
					Value="4,0" />
		</Style.Setters>
	</Style>

	<!--#region Rounded textbox radius 10-->
	<SolidColorBrush x:Key="TextBox.MouseOver.Border"
					 Color="#FF7EB4EA" />
	<SolidColorBrush x:Key="TextBox.Focus.Border"
					 Color="#FF569DE5" />
	<ControlTemplate x:Key="GlobalTextBoxTemplate"
					 TargetType="{x:Type TextBoxBase}">
		<Border x:Name="border"
				Background="{TemplateBinding Background}"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="{TemplateBinding BorderThickness}"
				SnapsToDevicePixels="True"
				CornerRadius="10">
			<ScrollViewer x:Name="PART_ContentHost"
						  Focusable="false"
						  HorizontalScrollBarVisibility="Hidden"
						  VerticalScrollBarVisibility="Hidden" />
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled"
					 Value="false">
				<Setter Property="BorderBrush"
						TargetName="border"
						Value="OrangeRed" />
			</Trigger>
			<Trigger Property="IsMouseOver"
					 Value="true">
				<Setter Property="BorderBrush"
						TargetName="border"
						Value="{StaticResource TextBox.MouseOver.Border}" />
			</Trigger>
			<Trigger Property="IsKeyboardFocused"
					 Value="true">
				<Setter Property="BorderBrush"
						TargetName="border"
						Value="{StaticResource TextBox.Focus.Border}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<!--#endregion-->

	<!--#region TreeViewTemplate-->
	<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke"
					 Color="#FF818181" />
	<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill"
					 Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke"
					 Color="#FF27C7F7" />
	<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill"
					 Color="#FFCCEEFB" />
	<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke"
					 Color="#FF262626" />
	<SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill"
					 Color="#FF595959" />
	<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke"
					 Color="#FF1CC4F7" />
	<SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill"
					 Color="#FF82DFFB" />
	<PathGeometry x:Key="TreeArrow"
				  Figures="M0,0 L0,6 L6,0 z" />
	<Style x:Key="ExpandCollapseToggleStyle"
		   TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable"
				Value="False" />
		<Setter Property="Width"
				Value="16" />
		<Setter Property="Height"
				Value="16" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Background="Transparent"
							Height="16"
							Padding="5"
							Width="16">
						<Path x:Name="ExpandPath"
							  Data="{StaticResource TreeArrow}"
							  Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}"
							  Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
							<Path.RenderTransform>
								<RotateTransform Angle="135"
												 CenterX="3"
												 CenterY="3" />
							</Path.RenderTransform>
						</Path>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked"
								 Value="True">
							<Setter Property="RenderTransform"
									TargetName="ExpandPath">
								<Setter.Value>
									<RotateTransform Angle="180"
													 CenterX="3"
													 CenterY="3" />
								</Setter.Value>
							</Setter>
							<Setter Property="Fill"
									TargetName="ExpandPath"
									Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}" />
							<Setter Property="Stroke"
									TargetName="ExpandPath"
									Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}" />
						</Trigger>
						<Trigger Property="IsMouseOver"
								 Value="True">
							<Setter Property="Stroke"
									TargetName="ExpandPath"
									Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}" />
							<Setter Property="Fill"
									TargetName="ExpandPath"
									Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver"
										   Value="True" />
								<Condition Property="IsChecked"
										   Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Stroke"
									TargetName="ExpandPath"
									Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}" />
							<Setter Property="Fill"
									TargetName="ExpandPath"
									Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="TreeViewItemTemplate"
					 TargetType="{x:Type TreeViewItem}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition MinWidth="19"
								  Width="Auto" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition />
			</Grid.RowDefinitions>
			<ToggleButton x:Name="Expander"
						  ClickMode="Press"
						  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
						  Style="{StaticResource ExpandCollapseToggleStyle}" />
			<Border x:Name="Bd"
					Background="{TemplateBinding Background}"
					BorderBrush="{TemplateBinding BorderBrush}"
					BorderThickness="{TemplateBinding BorderThickness}"
					Grid.Column="1"
					Padding="{TemplateBinding Padding}"
					SnapsToDevicePixels="true">
				<ContentPresenter x:Name="PART_Header"
								  ContentSource="Header"
								  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
			</Border>
			<ItemsPresenter x:Name="ItemsHost"
							Grid.Column="1"
							Grid.ColumnSpan="2"
							Grid.Row="1"
							Margin="-25,0" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsExpanded"
					 Value="false">
				<Setter Property="Visibility"
						TargetName="ItemsHost"
						Value="Collapsed" />
			</Trigger>
			<Trigger Property="HasItems"
					 Value="false">
				<Setter Property="Visibility"
						TargetName="Expander"
						Value="Hidden" />
			</Trigger>
			<Trigger Property="IsSelected"
					 Value="true">
				<Setter Property="Background"
						TargetName="Bd"
						Value="CornflowerBlue" />
				<Setter Property="Foreground"
						Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelected"
							   Value="true" />
					<Condition Property="IsSelectionActive"
							   Value="false" />
				</MultiTrigger.Conditions>
				<Setter Property="Background"
						TargetName="Bd"
						Value="Gray" />
				<Setter Property="Foreground"
						Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
			</MultiTrigger>
			<Trigger Property="IsEnabled"
					 Value="false">
				<Setter Property="Foreground"
						Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<!--#endregion-->

	<!--#region ButtonStyle-->
	<Style x:Key="FocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="2"
							   StrokeDashArray="1 2"
							   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
							   SnapsToDevicePixels="true"
							   StrokeThickness="1" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="Button.Static.Background"
					 Color="#FFDDDDDD" />
	<SolidColorBrush x:Key="Button.Static.Border"
					 Color="MediumPurple" />
	<SolidColorBrush x:Key="Button.MouseOver.Background"
					 Color="Transparent" />
	<SolidColorBrush x:Key="Button.MouseOver.Border"
					 Color="#FF3C7FB1" />
	<SolidColorBrush x:Key="Button.Pressed.Background"
					 Color="Transparent" />
	<SolidColorBrush x:Key="Button.Pressed.Border"
					 Color="Wheat" />
	<SolidColorBrush x:Key="Button.Disabled.Background"
					 Color="Transparent" />
	<SolidColorBrush x:Key="Button.Disabled.Border"
					 Color="OrangeRed" />
	<SolidColorBrush x:Key="Button.Disabled.Foreground"
					 Color="Black" />
	<Style x:Key="ButtonStyle"
		   TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle"
				Value="{StaticResource FocusVisual}" />
		<Setter Property="Background"
				Value="{StaticResource Button.Static.Background}" />
		<Setter Property="BorderBrush"
				Value="{StaticResource Button.Static.Border}" />
		<Setter Property="Foreground"
				Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Padding"
				Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ButtonBase}">
					<Border x:Name="border"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="true">
						<ContentPresenter x:Name="contentPresenter"
										  Focusable="False"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  Margin="{TemplateBinding Padding}"
										  RecognizesAccessKey="True"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Button.IsDefaulted"
								 Value="true">
							<Setter Property="BorderBrush"
									TargetName="border"
									Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
						</Trigger>
						<Trigger Property="IsMouseOver"
								 Value="true">
							<Setter Property="Background"
									TargetName="border"
									Value="{StaticResource Button.MouseOver.Background}" />
							<Setter Property="BorderBrush"
									TargetName="border"
									Value="{StaticResource Button.MouseOver.Border}" />
						</Trigger>
						<Trigger Property="IsPressed"
								 Value="true">
							<Setter Property="Background"
									TargetName="border"
									Value="{StaticResource Button.Pressed.Background}" />
							<Setter Property="BorderBrush"
									TargetName="border"
									Value="{StaticResource Button.Pressed.Border}" />
						</Trigger>
						<Trigger Property="IsEnabled"
								 Value="false">
							<Setter Property="Background"
									TargetName="border"
									Value="{StaticResource Button.Disabled.Background}" />
							<Setter Property="BorderBrush"
									TargetName="border"
									Value="{StaticResource Button.Disabled.Border}" />
							<Setter Property="TextElement.Foreground"
									TargetName="contentPresenter"
									Value="{StaticResource Button.Disabled.Foreground}" />
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="border"
														Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)"
														From="Lime"
														To="MediumPurple"
														Duration="0:0:2" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--#endregion-->

	<!--#region TreeViewStyle-->
	<SolidColorBrush x:Key="ListBorder"
					 Color="Transparent" />
	<Style x:Key="TreeViewStyle"
		   TargetType="{x:Type TreeView}">
		<Setter Property="Background"
				Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
		<Setter Property="BorderBrush"
				Value="{StaticResource ListBorder}" />
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="Padding"
				Value="1" />
		<Setter Property="Foreground"
				Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Auto" />
		<Setter Property="ScrollViewer.PanningMode"
				Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled"
				Value="False" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeView}">
					<Border x:Name="Bd"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="true">
						<ScrollViewer x:Name="_tv_scrollviewer_"
									  Background="{TemplateBinding Background}"
									  CanContentScroll="false"
									  Focusable="false"
									  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
									  Padding="{TemplateBinding Padding}"
									  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled"
								 Value="false">
							<Setter Property="Background"
									TargetName="Bd"
									Value="Transparent" />
							<Setter Property="BorderBrush"
									TargetName="Bd"
									Value="OrangeRed" />
						</Trigger>
						<Trigger Property="VirtualizingPanel.IsVirtualizing"
								 Value="true">
							<Setter Property="CanContentScroll"
									TargetName="_tv_scrollviewer_"
									Value="true" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="VirtualizingPanel.IsVirtualizing"
					 Value="true">
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel />
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<!--#endregion-->
	
	<!--#region ScrollViewerTemplate-->
	<ControlTemplate x:Key="ScrollViewerTemplate"
					 TargetType="{x:Type ScrollViewer}">
		<Grid x:Name="Grid"
			  Background="{TemplateBinding Background}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<Rectangle x:Name="Corner"
					   Grid.Column="1"
					   Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
					   Grid.Row="1" />
			<ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
									CanHorizontallyScroll="False"
									ContentTemplate="{TemplateBinding ContentTemplate}"
									CanVerticallyScroll="False"
									Grid.Column="0"
									Content="{TemplateBinding Content}"
									CanContentScroll="{TemplateBinding CanContentScroll}"
									Margin="{TemplateBinding Padding}"
									Grid.Row="0" />
			<ScrollBar x:Name="PART_VerticalScrollBar"
					   AutomationProperties.AutomationId="VerticalScrollBar"
					   Style="{DynamicResource ScrollBarStyle}"
					   Cursor="Arrow"
					   Grid.Column="1"
					   Maximum="{TemplateBinding ScrollableHeight}"
					   Minimum="0"
					   Grid.Row="0"
					   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
					   ViewportSize="{TemplateBinding ViewportHeight}"
					   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
					   Margin="0,34,0,0" />
			<ScrollBar x:Name="PART_HorizontalScrollBar"
					   AutomationProperties.AutomationId="HorizontalScrollBar"
					   Cursor="Arrow"
					   Grid.Column="0"
					   Maximum="{TemplateBinding ScrollableWidth}"
					   Minimum="0"
					   Orientation="Horizontal"
					   Grid.Row="1"
					   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
					   ViewportSize="{TemplateBinding ViewportWidth}"
					   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
		</Grid>
	</ControlTemplate>
	<!--#endregion-->

	<!--#region ScrollBarStyle-->
	<SolidColorBrush x:Key="ScrollBar.Static.Background"
					 Color="Transparent" />
	<SolidColorBrush x:Key="ScrollBar.Static.Border"
					 Color="Transparent" />
	<SolidColorBrush x:Key="ScrollBar.Static.Glyph"
					 Color="AliceBlue" />
	<SolidColorBrush x:Key="ScrollBar.Static.Thumb"
					 Color="DarkGray" />
	<SolidColorBrush x:Key="ScrollBar.MouseOver.Background"
					 Color="Transparent" />
	<SolidColorBrush x:Key="ScrollBar.MouseOver.Border"
					 Color="Transparent" />
	<SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph"
					 Color="MediumPurple" />
	<SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb"
					 Color="Gray" />
	<SolidColorBrush x:Key="ScrollBar.Pressed.Background"
					 Color="Transparent" />
	<SolidColorBrush x:Key="ScrollBar.Pressed.Border"
					 Color="Transparent" />
	<SolidColorBrush x:Key="ScrollBar.Pressed.Thumb"
					 Color="#606060" />
	<SolidColorBrush x:Key="ScrollBar.Pressed.Glyph"
					 Color="Black" />
	<SolidColorBrush x:Key="ScrollBar.Disabled.Background"
					 Color="#F0F0F0" />
	<SolidColorBrush x:Key="ScrollBar.Disabled.Border"
					 Color="Transparent" />
	<SolidColorBrush x:Key="ScrollBar.Disabled.Glyph"
					 Color="Red" />
	<Style x:Key="RepeatButtonTransparent"
		   TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle"
				Value="true" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="Focusable"
				Value="false" />
		<Setter Property="IsTabStop"
				Value="false" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle Fill="{TemplateBinding Background}"
							   Height="{TemplateBinding Height}"
							   Width="{TemplateBinding Width}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollBarButton"
		   TargetType="{x:Type RepeatButton}">
		<Setter Property="FocusVisualStyle"
				Value="{StaticResource FocusVisual}" />
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Padding"
				Value="1" />
		<Setter Property="Focusable"
				Value="false" />
		<Setter Property="IsTabStop"
				Value="false" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border x:Name="border"
							Background="Transparent"
							BorderBrush="{StaticResource ScrollBar.Static.Border}"
							BorderThickness="1"
							SnapsToDevicePixels="true">
						<ContentPresenter x:Name="contentPresenter"
										  Focusable="False"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  Margin="{TemplateBinding Padding}"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
								 Value="true">
							<Setter Property="Background"
									TargetName="border"
									Value="{StaticResource ScrollBar.MouseOver.Background}" />
							<Setter Property="BorderBrush"
									TargetName="border"
									Value="{StaticResource ScrollBar.MouseOver.Border}" />
						</Trigger>
						<Trigger Property="IsPressed"
								 Value="true">
							<Setter Property="Background"
									TargetName="border"
									Value="{StaticResource ScrollBar.Pressed.Background}" />
							<Setter Property="BorderBrush"
									TargetName="border"
									Value="{StaticResource ScrollBar.Pressed.Border}" />
						</Trigger>
						<!--<Trigger Property="IsEnabled"
								 Value="false">
							<Setter Property="Opacity"
									TargetName="contentPresenter"
									Value="0.56" />
							<Setter Property="Background"
									TargetName="border"
									Value="{StaticResource ScrollBar.Disabled.Background}" />
							<Setter Property="BorderBrush"
									TargetName="border"
									Value="{StaticResource ScrollBar.Disabled.Border}" />
						</Trigger>-->
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollBarThumbVertical"
		   TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle"
				Value="true" />
		<Setter Property="IsTabStop"
				Value="false" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Rectangle x:Name="rectangle"
							   Fill="{StaticResource ScrollBar.Static.Thumb}"
							   Height="{TemplateBinding Height}"
							   SnapsToDevicePixels="True"
							   Width="{TemplateBinding Width}"
							   RadiusX="5"
							   RadiusY="8" />
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
								 Value="true">
							<Setter Property="Fill"
									TargetName="rectangle"
									Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
						</Trigger>
						<Trigger Property="IsDragging"
								 Value="true">
							<Setter Property="Fill"
									TargetName="rectangle"
									Value="{StaticResource ScrollBar.Pressed.Thumb}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollBarThumbHorizontal"
		   TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle"
				Value="true" />
		<Setter Property="IsTabStop"
				Value="false" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Rectangle x:Name="rectangle"
							   Fill="{StaticResource ScrollBar.Static.Thumb}"
							   Height="{TemplateBinding Height}"
							   SnapsToDevicePixels="True"
							   Width="{TemplateBinding Width}" />
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
								 Value="true">
							<Setter Property="Fill"
									TargetName="rectangle"
									Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
						</Trigger>
						<Trigger Property="IsDragging"
								 Value="true">
							<Setter Property="Fill"
									TargetName="rectangle"
									Value="{StaticResource ScrollBar.Pressed.Thumb}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollBarStyle"
		   TargetType="{x:Type ScrollBar}">
		<Setter Property="Stylus.IsPressAndHoldEnabled"
				Value="false" />
		<Setter Property="Stylus.IsFlicksEnabled"
				Value="false" />
		<Setter Property="Background"
				Value="{StaticResource ScrollBar.Static.Background}" />
		<Setter Property="BorderBrush"
				Value="{StaticResource ScrollBar.Static.Border}" />
		<Setter Property="Foreground"
				Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
		<Setter Property="BorderThickness"
				Value="1,0" />
		<Setter Property="Width"
				Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
		<Setter Property="MinWidth"
				Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollBar}">
					<Grid x:Name="Bg"
						  SnapsToDevicePixels="true">
						<Grid.RowDefinitions>
							<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
							<RowDefinition Height="0.00001*" />
							<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
						</Grid.RowDefinitions>
						<Border Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Grid.Row="1" />
						<RepeatButton x:Name="PART_LineUpButton"
									  Command="{x:Static ScrollBar.LineUpCommand}"
									  IsEnabled="{TemplateBinding IsMouseOver}"
									  Style="{StaticResource ScrollBarButton}">
							<Path x:Name="ArrowTop"
								  Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z"
								  Fill="{StaticResource ScrollBar.Static.Glyph}"
								  Margin="3,4,3,3"
								  Stretch="Uniform" />
						</RepeatButton>
						<Track x:Name="PART_Track"
							   IsDirectionReversed="true"
							   IsEnabled="{TemplateBinding IsMouseOver}"
							   Grid.Row="1">
							<Track.DecreaseRepeatButton>
								<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"
											  Style="{StaticResource RepeatButtonTransparent}" />
							</Track.DecreaseRepeatButton>
							<Track.IncreaseRepeatButton>
								<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
											  Style="{StaticResource RepeatButtonTransparent}" />
							</Track.IncreaseRepeatButton>
							<Track.Thumb>
								<Thumb Style="{StaticResource ScrollBarThumbVertical}" />
							</Track.Thumb>
						</Track>
						<RepeatButton x:Name="PART_LineDownButton"
									  Command="{x:Static ScrollBar.LineDownCommand}"
									  IsEnabled="{TemplateBinding IsMouseOver}"
									  Grid.Row="2"
									  Style="{StaticResource ScrollBarButton}">
							<Path x:Name="ArrowBottom"
								  Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z"
								  Fill="{StaticResource ScrollBar.Static.Glyph}"
								  Margin="3,4,3,3"
								  Stretch="Uniform" />
						</RepeatButton>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
										   Value="true" />
								<Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}"
										   Value="true" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill"
									TargetName="ArrowBottom"
									Value="{StaticResource ScrollBar.Pressed.Glyph}" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}"
										   Value="true" />
								<Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}"
										   Value="true" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill"
									TargetName="ArrowTop"
									Value="{StaticResource ScrollBar.Pressed.Glyph}" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
										   Value="true" />
								<Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}"
										   Value="false" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill"
									TargetName="ArrowBottom"
									Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}"
										   Value="true" />
								<Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}"
										   Value="false" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill"
									TargetName="ArrowTop"
									Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
						</MultiDataTrigger>
						<Trigger Property="IsEnabled"
								 Value="false">
							<Setter Property="Fill"
									TargetName="ArrowTop"
									Value="{StaticResource ScrollBar.Disabled.Glyph}" />
							<Setter Property="Fill"
									TargetName="ArrowBottom"
									Value="{StaticResource ScrollBar.Disabled.Glyph}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Orientation"
					 Value="Horizontal">
				<Setter Property="Width"
						Value="Auto" />
				<Setter Property="MinWidth"
						Value="0" />
				<Setter Property="Height"
						Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
				<Setter Property="MinHeight"
						Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
				<Setter Property="BorderThickness"
						Value="0,1" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollBar}">
							<Grid x:Name="Bg"
								  SnapsToDevicePixels="true">
								<Grid.ColumnDefinitions>
									<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
									<ColumnDefinition Width="0.00001*" />
									<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
								</Grid.ColumnDefinitions>
								<Border Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										Grid.Column="1" />
								<RepeatButton x:Name="PART_LineLeftButton"
											  Command="{x:Static ScrollBar.LineLeftCommand}"
											  IsEnabled="{TemplateBinding IsMouseOver}"
											  Style="{StaticResource ScrollBarButton}">
									<Path x:Name="ArrowLeft"
										  Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z"
										  Fill="{StaticResource ScrollBar.Static.Glyph}"
										  Margin="3"
										  Stretch="Uniform" />
								</RepeatButton>
								<Track x:Name="PART_Track"
									   Grid.Column="1"
									   IsEnabled="{TemplateBinding IsMouseOver}">
									<Track.DecreaseRepeatButton>
										<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}"
													  Style="{StaticResource RepeatButtonTransparent}" />
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}"
													  Style="{StaticResource RepeatButtonTransparent}" />
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb Style="{StaticResource ScrollBarThumbHorizontal}" />
									</Track.Thumb>
								</Track>
								<RepeatButton x:Name="PART_LineRightButton"
											  Command="{x:Static ScrollBar.LineRightCommand}"
											  Grid.Column="2"
											  IsEnabled="{TemplateBinding IsMouseOver}"
											  Style="{StaticResource ScrollBarButton}">
									<Path x:Name="ArrowRight"
										  Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z"
										  Fill="{StaticResource ScrollBar.Static.Glyph}"
										  Margin="3"
										  Stretch="Uniform" />
								</RepeatButton>
							</Grid>
							<ControlTemplate.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}"
												   Value="true" />
										<Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}"
												   Value="true" />
									</MultiDataTrigger.Conditions>
									<Setter Property="Fill"
											TargetName="ArrowRight"
											Value="{StaticResource ScrollBar.Pressed.Glyph}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}"
												   Value="true" />
										<Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}"
												   Value="true" />
									</MultiDataTrigger.Conditions>
									<Setter Property="Fill"
											TargetName="ArrowLeft"
											Value="{StaticResource ScrollBar.Pressed.Glyph}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}"
												   Value="true" />
										<Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}"
												   Value="false" />
									</MultiDataTrigger.Conditions>
									<Setter Property="Fill"
											TargetName="ArrowRight"
											Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}"
												   Value="true" />
										<Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}"
												   Value="false" />
									</MultiDataTrigger.Conditions>
									<Setter Property="Fill"
											TargetName="ArrowLeft"
											Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
								</MultiDataTrigger>
								<Trigger Property="IsEnabled"
										 Value="false">
									<Setter Property="Fill"
											TargetName="ArrowLeft"
											Value="{StaticResource ScrollBar.Disabled.Glyph}" />
									<Setter Property="Fill"
											TargetName="ArrowRight"
											Value="{StaticResource ScrollBar.Disabled.Glyph}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<!--#endregion-->
</ResourceDictionary>