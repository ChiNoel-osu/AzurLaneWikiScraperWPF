<UserControl x:Class="AzurLaneWikiScraperWPF.View.TopBar"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:root="clr-namespace:AzurLaneWikiScraperWPF"
			 xmlns:local="clr-namespace:AzurLaneWikiScraperWPF.View"
			 xmlns:converter="clr-namespace:AzurLaneWikiScraperWPF.Converters"
			 xmlns:vm="clr-namespace:AzurLaneWikiScraperWPF.ViewModel"
			 d:DataContext="{d:DesignInstance Type=vm:MainViewModel}"
			 mc:Ignorable="d"
			 d:DesignHeight="30"
			 d:DesignWidth="100">
	<UserControl.Resources>
		<Style x:Key="FocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<!--Empty FocusVisual so it doesn't have that black dot around the button-->
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="Button.Static.Background"
						 Color="#FFDDDDDD" />
		<SolidColorBrush x:Key="Button.Static.Border"
						 Color="Transparent" />
		<SolidColorBrush x:Key="Button.MouseOver.Background"
						 Color="Moccasin" />
		<SolidColorBrush x:Key="Button.MouseOver.Border"
						 Color="Aqua" />
		<SolidColorBrush x:Key="Button.Pressed.Background"
						 Color="LightBlue" />
		<SolidColorBrush x:Key="Button.Pressed.Border"
						 Color="Orange" />
		<SolidColorBrush x:Key="Button.Disabled.Background"
						 Color="#FFF4F4F4" />
		<SolidColorBrush x:Key="Button.Disabled.Border"
						 Color="#FFADB2B5" />
		<SolidColorBrush x:Key="Button.Disabled.Foreground"
						 Color="#FF838383" />
		<Style x:Key="TopBarButtonStyle"
			   TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle"
					Value="{StaticResource FocusVisual}" />
			<Setter Property="Background"
					Value="{StaticResource Button.Static.Background}" />
			<Setter Property="BorderBrush"
					Value="{StaticResource Button.Static.Border}" />
			<Setter Property="Foreground"
					Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
			<Setter Property="BorderThickness"
					Value="0" />
			<Setter Property="HorizontalContentAlignment"
					Value="Center" />
			<Setter Property="VerticalContentAlignment"
					Value="Center" />
			<Setter Property="Padding"
					Value="1" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ButtonBase}">
						<Border x:Name="border"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								SnapsToDevicePixels="true">
							<ContentPresenter x:Name="contentPresenter"
											  Focusable="False"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  Margin="{TemplateBinding Padding}"
											  RecognizesAccessKey="True"
											  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="Button.IsDefaulted"
									 Value="true">
								<Setter Property="BorderBrush"
										TargetName="border"
										Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
							</Trigger>
							<Trigger Property="IsMouseOver"
									 Value="true">
								<Setter Property="Background"
										TargetName="border"
										Value="{StaticResource Button.MouseOver.Background}" />
								<Setter Property="BorderBrush"
										TargetName="border"
										Value="{StaticResource Button.MouseOver.Border}" />
							</Trigger>
							<Trigger Property="IsPressed"
									 Value="true">
								<Setter Property="Background"
										TargetName="border"
										Value="{StaticResource Button.Pressed.Background}" />
								<Setter Property="BorderBrush"
										TargetName="border"
										Value="{StaticResource Button.Pressed.Border}" />
							</Trigger>
							<Trigger Property="IsEnabled"
									 Value="false">
								<Setter Property="Background"
										TargetName="border"
										Value="{StaticResource Button.Disabled.Background}" />
								<Setter Property="BorderBrush"
										TargetName="border"
										Value="{StaticResource Button.Disabled.Border}" />
								<Setter Property="TextElement.Foreground"
										TargetName="contentPresenter"
										Value="{StaticResource Button.Disabled.Foreground}" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<converter:WindowActionConverter x:Key="WndActConverter" />
	</UserControl.Resources>
	<Grid>
		<Rectangle Fill="MediumPurple"
				   Grid.Row="0"
				   Width="10"
				   HorizontalAlignment="Left" />
		<Rectangle Fill="MediumPurple"
				   Grid.Row="0"
				   RadiusX="10"
				   RadiusY="10" />
		<StackPanel Orientation="Horizontal"
					FlowDirection="RightToLeft"
					Grid.Row="0">
			<Button Name="CloseBtn"
					Style="{DynamicResource TopBarButtonStyle}"
					Height="31"
					Width="30"
					Background="#FF605C"
					Margin="-0.1,-0.2,0,0"
					Command="{Binding TopBar.WndActCommand}">
				<Button.CommandParameter>
					<MultiBinding Converter="{StaticResource WndActConverter}">
						<Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=root:MainWindow}" />
						<Binding ElementName="CloseBtn" Path="Name" />
					</MultiBinding>
				</Button.CommandParameter>
				<Button.OpacityMask>
					<ImageBrush ImageSource="pack://siteoforigin:,,,/Resources/CloseBtnOpacityMask.png" />
				</Button.OpacityMask>
			</Button>
			<Button Name="ChangeStBtn"
					Style="{DynamicResource TopBarButtonStyle}"
					Height="20"
					Width="20"
					Background="#FFBD44"
					Margin="5,0,0,0"
					Command="{Binding TopBar.WndActCommand}">
				<Button.CommandParameter>
					<MultiBinding Converter="{StaticResource WndActConverter}">
						<Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=root:MainWindow}" />
						<Binding ElementName="ChangeStBtn"
								 Path="Name" />
					</MultiBinding>
				</Button.CommandParameter>
			</Button>
			<Button Name="MinBtn"
					Style="{DynamicResource TopBarButtonStyle}"
					Height="20"
					Width="20"
					Background="#00CA4E"
					Margin="5,0,0,0"
					Command="{Binding TopBar.WndActCommand}">
				<Button.CommandParameter>
					<MultiBinding Converter="{StaticResource WndActConverter}">
						<Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=root:MainWindow}" />
						<Binding ElementName="MinBtn"
								 Path="Name" />
					</MultiBinding>
				</Button.CommandParameter>
			</Button>
		</StackPanel>
	</Grid>
</UserControl>
